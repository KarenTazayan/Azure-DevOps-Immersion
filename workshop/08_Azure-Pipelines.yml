# https://aka.ms/yaml

variables:
  nameSuffix: 'a1'
  appNamePrefix: 'shopping-app'

trigger:
- main

stages:
- stage: Build
  displayName: Build stage
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
    demands:
        - msbuild
        - visualstudio
  variables:
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
  - job: Build_Solution
    displayName: Whole solution build process
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 6.0.200 sdk'
      inputs:
        packageType: sdk
        version: 6.0.200

    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 5.x'
      inputs:
        versionSpec: 5.x

    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'
        restoreSolution: 'ShoppingApp.sln'

    - task: VSBuild@1
      displayName: 'Build solution **\*.sln'
      inputs:
        solution: '**\*.sln'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      displayName: 'Inspect Code with ReSharper CLI'
      inputs:
        targetType: filePath
        filePath: ./InspectCode.ps1

    # Run Tests
    - task: DotNetCoreCLI@2
      displayName: 'Run Integration Tests'
      inputs:
        command: test
        projects: |
          test/ShoppingApp.Tests
          publishTestResults: true

##################### Packing Artifacts Stage #####################

- stage: Packing_Artifacts
  displayName: Packing artifacts stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
    demands:
    - msbuild
    - visualstudio
  variables:
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
  - job: Packing_Artifacts
    displayName: Packing Artifacts
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 6.0.200 sdk'
      inputs:
        packageType: sdk
        version: 6.0.200
      
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 5.x'
      inputs:
        versionSpec: 5.x
      
    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'
        restoreSolution: 'ShoppingApp.sln'

    - task: VSBuild@1
      displayName: 'Publish ShoppingApp.SiloHost'
      inputs:
        solution: '$(Build.SourcesDirectory)/src/ShoppingApp.SiloHost/*.csproj'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: VSBuild@1
      displayName: 'Publish ShoppingApp.ShoppingApp.WebUI'
      inputs:
        solution: '$(Build.SourcesDirectory)/src/ShoppingApp.WebUI/*.csproj'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
      
    - task: ArchiveFiles@2
      displayName: 'Pack ShoppingApp.SiloHost'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost.zip'
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Pack ShoppingApp.SiloHost'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI.zip'
        replaceExistingArchive: true

    - task: CopyFiles@2
      displayName: 'Copy whole infrastructure deployment file'
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/deploy'
        contents: '*.bicep'
        targetFolder: '$(Build.ArtifactStagingDirectory)/infrastructure/deploy'
        cleanTargetFolder: true

    - task: CopyFiles@2
      displayName: 'Copy services deployment *.zip packages'
      inputs:
        sourceFolder: '$(Build.ArtifactStagingDirectory)/services'
        contents: '*.zip'
        targetFolder: '$(Build.ArtifactStagingDirectory)/services/deploy'
        cleanTargetFolder: true
    
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts
    - task: PublishPipelineArtifact@1
      displayName: 'Publish whole infrastructure deployment file to Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/infrastructure/deploy'
        artifactName: 'infrastructure'
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish services deployment *.zip packages to Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/services/deploy'
        artifactName: 'services'

##################### Provision Infrastructure Stage #####################

- stage: Provision_Infrastructure
  displayName: Provision infrastructure stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    azureServiceConnection: 'DefaultAzureServiceConnection'
    resourceGroupName: 'rg-shopping-app'
    location: 'germanywestcentral'
    templateFile: '$(Pipeline.Workspace)/infrastructure/azuredeploy.bicep'
  jobs:
  - job: Deploy_Infrastructure
    displayName: Deploy infrastructure in Azure
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download whole infrastructure deployment file'
      inputs:
        artifact: 'infrastructure'
        path: $(Pipeline.Workspace)/infrastructure

    - task: AzureCLI@2
      displayName: 'Deploy the whole infrastructure to Azure'
      inputs:
        azureSubscription: 'DefaultAzureServiceConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version
          az group create --name $(resourceGroupName) --location $(location)
          az deployment group create --resource-group $(resourceGroupName) \
             --template-file $(templateFile) --parameters nameSuffix='$(nameSuffix)' \
             appNamePrefix='$(appNamePrefix)' \